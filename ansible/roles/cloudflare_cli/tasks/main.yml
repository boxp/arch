---
# tasks file for cloudflare_cli

- name: Determine system architecture
  ansible.builtin.set_fact:
    cloudflare_cli_arch: "{{ cloudflare_cli_arch_map[ansible_architecture] | default('arm64') }}"

- name: Get latest cloudflared version
  ansible.builtin.uri:
    url: "{{ cloudflare_cli_base_url }}/latest"
    method: GET
    follow_redirects: safe
    return_content: false
  register: cloudflared_latest_release
  when: cloudflare_cli_version == "latest"

- name: Extract version from redirect URL
  ansible.builtin.set_fact:
    cloudflare_cli_resolved_version: "{{ cloudflared_latest_release.url.split('/')[-1] }}"
  when: cloudflare_cli_version == "latest"

- name: Use specified version
  ansible.builtin.set_fact:
    cloudflare_cli_resolved_version: "{{ cloudflare_cli_version }}"
  when: cloudflare_cli_version != "latest"

- name: Create cloudflared user for service
  ansible.builtin.user:
    name: "{{ cloudflare_cli_user }}"
    group: "{{ cloudflare_cli_group }}"
    system: true
    shell: /usr/sbin/nologin
    home: "{{ cloudflare_cli_config_dir }}"
    create_home: false
    state: present
  become: true
  when: cloudflare_cli_enable_service

- name: Create cloudflared directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cloudflare_cli_user if cloudflare_cli_enable_service else 'root' }}"
    group: "{{ cloudflare_cli_group if cloudflare_cli_enable_service else 'root' }}"
    mode: '0755'
  become: true
  loop:
    - "{{ cloudflare_cli_config_dir }}"
    - "{{ cloudflare_cli_log_dir }}"
  when: cloudflare_cli_enable_service

- name: Download cloudflared binary
  ansible.builtin.get_url:
    url: "{{ cloudflare_cli_base_url }}/download/{{ cloudflare_cli_resolved_version }}/cloudflared-linux-{{ cloudflare_cli_arch }}"
    dest: "{{ cloudflare_cli_install_path }}"
    mode: '0755'
    owner: root
    group: root
  become: true

- name: Verify cloudflared installation
  ansible.builtin.command: "{{ cloudflare_cli_install_path }} version"
  register: cloudflared_version_check
  changed_when: false
  failed_when: cloudflared_version_check.rc != 0
