---
# Kubernetes installation tasks

- name: Detect chroot build environment
  ansible.builtin.set_fact:
    is_chroot: "{{ chroot_build | default(false) | bool or (ansible_env.PWD | default('') | regex_search('/tmp/.*rootfs')) is not none }}"

- name: Add Kubernetes repository key
  ansible.builtin.apt_key:
    url: "{{ kubernetes_apt_key_url }}"
    state: present
  become: true

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb {{ kubernetes_apt_repository }} /"
    state: present
    filename: kubernetes
    update_cache: true
  become: true

- name: Install Kubernetes packages
  ansible.builtin.package:
    name: "{{ kubernetes_packages }}"
    state: present
    allow_downgrade: true
  become: true
  notify: Restart kubelet

- name: Hold Kubernetes packages to prevent automatic updates
  ansible.builtin.dpkg_selections:
    name: "{{ item.split('=')[0] }}"
    selection: hold
  become: true
  loop: "{{ kubernetes_packages }}"

- name: Create kubelet configuration directory
  ansible.builtin.file:
    path: /etc/kubernetes
    state: directory
    mode: '0755'
  become: true

- name: Enable kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: true
    daemon_reload: true
  become: true
  when: 
    - not ansible_virtualization_type == "docker"
    - not is_chroot

- name: Enable kubelet service via symlink (chroot environment)
  ansible.builtin.file:
    src: /lib/systemd/system/kubelet.service
    dest: /etc/systemd/system/multi-user.target.wants/kubelet.service
    state: link
  become: true
  when: is_chroot

- name: Create systemd multi-user.target.wants directory (chroot environment)
  ansible.builtin.file:
    path: /etc/systemd/system/multi-user.target.wants
    state: directory
    mode: '0755'
  become: true
  when: is_chroot
