---
# tasks file for user_management

- name: Ensure sudo package is installed
  ansible.builtin.package:
    name: sudo
    state: present
  become: true

- name: Create user {{ user_management_username }}
  ansible.builtin.user:
    name: "{{ user_management_username }}"
    groups: "{{ user_management_groups }}"
    shell: "{{ user_management_shell }}"
    create_home: true
    state: present
  become: true

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "/home/{{ user_management_username }}/.ssh"
    state: directory
    owner: "{{ user_management_username }}"
    group: "{{ user_management_username }}"
    mode: '0700'
  become: true

- name: Fetch GitHub public keys
  ansible.builtin.uri:
    url: "https://github.com/{{ user_management_github_username }}.keys"
    method: GET
    return_content: true
  register: github_keys_response
  when:
    - user_management_use_github_keys
    - user_management_github_username != ""
  delegate_to: localhost
  become: false

- name: Add SSH public key from variable
  ansible.posix.authorized_key:
    user: "{{ user_management_username }}"
    key: "{{ user_management_ssh_key }}"
    state: present
  become: true
  when:
    - not user_management_use_github_keys
    - user_management_ssh_key != ""

- name: Add SSH public keys from GitHub
  ansible.posix.authorized_key:
    user: "{{ user_management_username }}"
    key: "{{ github_keys_response.content }}"
    state: present
  become: true
  when:
    - user_management_use_github_keys
    - github_keys_response is defined
    - github_keys_response.content != ""

- name: Ensure user can sudo without password
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/{{ user_management_username }}
    line: "{{ user_management_username }} ALL=(ALL) NOPASSWD:ALL"
    create: true
    mode: '0440'
    validate: 'visudo -cf %s'
  become: true

- name: Update package cache
  ansible.builtin.package:
    update_cache: true
  become: true

- name: Install essential tools
  ansible.builtin.package:
    name:
      - vim
      - curl
      - wget
      - htop
      - tree
      - git
      - nano
      - less
      - unzip
      - dnsutils
    state: present
  become: true

# Armbian-specific workarounds for home directory issues
# Based on o3 research: https://docs.armbian.com/Developer-Guide_Build-Switches/
# Root cause: INCLUDE_HOME_DIR=no (default) and armbian-firstrun service
# Ideal solution: Set INCLUDE_HOME_DIR=yes during Armbian image build
# Workaround: Disable armbian-firstrun to prevent /home directory reset

- name: Check if running on Armbian
  ansible.builtin.stat:
    path: /etc/armbian-release
  register: armbian_release
  become: true

- name: Disable armbian-firstrun service to prevent home directory reset
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  become: true
  loop:
    - armbian-firstrun
    - armbian-firstrun-config
  when: armbian_release.stat.exists
  failed_when: false

- name: Remove .not_logged_in_yet to prevent firstrun execution
  ansible.builtin.file:
    path: /root/.not_logged_in_yet
    state: absent
  become: true
  when: armbian_release.stat.exists
