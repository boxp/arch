---
# Updated tasks file for network_configuration using Netplan

- name: Ensure IP address is provided
  ansible.builtin.fail:
    msg: "network_ip_address must be provided"
  when: network_ip_address == ""

- name: Ensure gateway is provided
  ansible.builtin.fail:
    msg: "network_gateway must be provided"
  when: network_gateway == ""

- name: Install required packages
  ansible.builtin.package:
    name:
      - iproute2
      - rfkill
      - netplan.io
    state: present
  become: true

- name: Ensure netplan directory exists
  ansible.builtin.file:
    path: /etc/netplan
    state: directory
    mode: '0755'
  become: true

- name: Remove default DHCP netplan configuration
  ansible.builtin.file:
    path: /etc/netplan/10-dhcp-all-interfaces.yaml
    state: absent
  become: true
  notify: Apply netplan configuration

- name: Remove legacy network interfaces configuration
  ansible.builtin.file:
    path: "/etc/network/interfaces.d/{{ network_interface }}"
    state: absent
  become: true

- name: Configure static IP with Netplan
  ansible.builtin.template:
    src: netplan-static.yaml.j2
    dest: "/etc/netplan/01-static-{{ network_interface }}.yaml"
    owner: root
    group: root
    mode: '0600'
  become: true
  notify: Apply netplan configuration

- name: Check WiFi status
  ansible.builtin.shell: |
    set -o pipefail
    rfkill list wifi | grep -q 'Soft blocked: no' || true
  register: wifi_status
  become: true
  when: network_disable_wifi
  changed_when: false
  failed_when: false

- name: Disable WiFi
  ansible.builtin.command: rfkill block wifi
  become: true
  when: network_disable_wifi and wifi_status.rc == 0
  changed_when: true
  failed_when: false

- name: Check Bluetooth status
  ansible.builtin.shell: |
    set -o pipefail
    rfkill list bluetooth | grep -q 'Soft blocked: no' || true
  register: bluetooth_status
  become: true
  when: network_disable_bluetooth
  changed_when: false
  failed_when: false

- name: Disable Bluetooth
  ansible.builtin.command: rfkill block bluetooth
  become: true
  when: network_disable_bluetooth and bluetooth_status.rc == 0
  changed_when: true
  failed_when: false

- name: Create systemd service to disable WiFi and Bluetooth on boot
  ansible.builtin.copy:
    dest: /etc/systemd/system/disable-wireless.service
    content: |
      [Unit]
      Description=Disable WiFi and Bluetooth
      After=multi-user.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/sbin/rfkill block wifi
      ExecStart=/usr/sbin/rfkill block bluetooth

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'
  become: true
  when: network_disable_wifi or network_disable_bluetooth

- name: Create systemd multi-user.target.wants directory
  ansible.builtin.file:
    path: /etc/systemd/system/multi-user.target.wants
    state: directory
    mode: '0755'
  become: true
  when: network_disable_wifi or network_disable_bluetooth

- name: Enable disable-wireless service via symlink
  ansible.builtin.file:
    src: /etc/systemd/system/disable-wireless.service
    dest: /etc/systemd/system/multi-user.target.wants/disable-wireless.service
    state: link
  become: true
  when: network_disable_wifi or network_disable_bluetooth
