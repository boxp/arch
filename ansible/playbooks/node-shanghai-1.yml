---
- name: Configure Shanghai-1 control plane node
  hosts: localhost
  become: true
  gather_facts: false
  vars:
    # Node-specific configuration
    node_hostname: "shanghai-1"
    node_ip: "192.168.10.102"
    cluster_vip: "192.168.10.99"
    cluster_domain: "cluster.local"
    cluster_dns: "10.96.0.10"
    
    # Kubernetes configuration
    kubernetes_version: "1.32"
    kubernetes_package_version: "1.32.0-1.1"
    crio_version: "1.32"
    
    # Hardware configuration
    hardware_type: "orange_pi_zero3"
    architecture: "arm64"
    
    # Network configuration
    network_gateway: "192.168.10.1"
    network_dns_servers:
      - "8.8.8.8"
      - "8.8.4.4"

  tasks:
    - name: Set hostname
      hostname:
        name: "{{ node_hostname }}"

    - name: Update /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1 {{ node_hostname }}"

    - name: Configure static IP with netplan
      copy:
        content: |
          network:
            version: 2
            renderer: systemd
            ethernets:
              eth0:
                dhcp4: false
                addresses:
                  - {{ node_ip }}/24
                gateway4: {{ network_gateway }}
                nameservers:
                  addresses: {{ network_dns_servers }}
        dest: /etc/netplan/01-armbian-static.yaml
        mode: '0644'

    - name: Remove dhcp configuration
      file:
        path: /etc/netplan/10-dhcp-all-interfaces.yaml
        state: absent

    - name: Create kube-vip manifest for this node
      template:
        src: /tmp/kube-vip.yaml.j2
        dest: /etc/kubernetes/manifests/kube-vip.yaml
        mode: '0644'
      vars:
        kube_vip_vip: "{{ cluster_vip }}"
        kube_vip_interface: "eth0"

    - name: Create kubeadm init configuration
      copy:
        content: |
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: InitConfiguration
          localAPIEndpoint:
            advertiseAddress: {{ node_ip }}
            bindPort: 6443
          nodeRegistration:
            criSocket: unix:///var/run/crio/crio.sock
            kubeletExtraArgs:
              node-ip: {{ node_ip }}
          ---
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          kubernetesVersion: v{{ kubernetes_version }}.0
          controlPlaneEndpoint: {{ cluster_vip }}:6443
          networking:
            serviceSubnet: 10.96.0.0/16
            podSubnet: 10.244.0.0/16
            dnsDomain: {{ cluster_domain }}
          etcd:
            local:
              dataDir: /var/lib/etcd
          dns:
            type: CoreDNS
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          clusterDNS:
            - {{ cluster_dns }}
          clusterDomain: {{ cluster_domain }}
          containerRuntimeEndpoint: unix:///var/run/crio/crio.sock
          cgroupDriver: systemd
        dest: /etc/kubeadm/kubeadm-init.yaml
        mode: '0644'

    - name: Create directories for kubeadm
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /etc/kubeadm
        - /etc/kubernetes/pki

    - name: Create first-boot initialization script
      copy:
        content: |
          #!/bin/bash
          
          # Wait for network to be ready
          sleep 30
          
          # Apply network configuration
          netplan apply
          
          # Start and enable services
          systemctl enable --now crio
          systemctl enable --now kubelet
          
          # Initialize Kubernetes cluster (only on first boot)
          if [ ! -f /etc/kubernetes/admin.conf ]; then
              kubeadm init --config=/etc/kubeadm/kubeadm-init.yaml
              
              # Configure kubectl for root
              mkdir -p /root/.kube
              cp -i /etc/kubernetes/admin.conf /root/.kube/config
              chown root:root /root/.kube/config
              
              # Configure kubectl for boxp user
              mkdir -p /home/boxp/.kube
              cp -i /etc/kubernetes/admin.conf /home/boxp/.kube/config
              chown boxp:boxp /home/boxp/.kube/config
              
              # Install CNI (Flannel)
              kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
          fi
          
          echo "Shanghai-1 initialization completed"
        dest: /usr/local/bin/init-shanghai-1.sh
        mode: '0755'

    - name: Create systemd service for first-boot initialization
      copy:
        content: |
          [Unit]
          Description=Shanghai-1 Kubernetes initialization
          After=network-online.target
          Wants=network-online.target
          ConditionPathExists=!/var/lib/shanghai-1-initialized

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/init-shanghai-1.sh
          ExecStartPost=/bin/touch /var/lib/shanghai-1-initialized
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/init-shanghai-1.service
        mode: '0644'

    - name: Enable shanghai-1 initialization service
      systemd:
        name: init-shanghai-1.service
        enabled: yes
        daemon_reload: yes