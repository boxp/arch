---
- name: Configure Shanghai-1 control plane node
  hosts: all
  become: true
  gather_facts: false
  vars_files:
    - ../vars/nodes.yml
  vars:
    # Node-specific configuration
    node_name: "shanghai-1"
    node_hostname: "{{ node_name }}"
    node_ip: "{{ node_ips[node_name] }}"
    cluster_vip: "{{ cluster.vip }}"
    cluster_domain: "{{ cluster.domain }}"
    cluster_dns: "{{ cluster.dns }}"

    # Kubernetes configuration
    kubernetes_version: "1.32"
    kubernetes_package_version: "1.32.0-1.1"
    crio_version: "1.32"

    # Hardware configuration
    hardware_type: "orange_pi_zero3"
    architecture: "arm64"

    # Network configuration
    network_gateway: "{{ cluster.gateway }}"
    network_dns_servers: "{{ cluster.dns_servers }}"

  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ node_hostname }}"

    - name: Update /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1 {{ node_hostname }}"

    - name: Configure static IP with netplan
      ansible.builtin.copy:
        content: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              eth0:
                dhcp4: false
                dhcp6: false
                addresses:
                  - {{ node_ip }}/24
                routes:
                  - to: default
                    via: {{ network_gateway }}
                nameservers:
                  addresses: {{ network_dns_servers }}
                optional: false
        dest: /etc/netplan/01-armbian-static.yaml
        mode: '0600'

    - name: Remove dhcp configuration
      ansible.builtin.file:
        path: /etc/netplan/10-dhcp-all-interfaces.yaml
        state: absent

    - name: Deploy kube-vip for cluster VIP
      ansible.builtin.include_role:
        name: kube_vip
      vars:
        kube_vip_vip: "{{ cluster_vip }}"
        kube_vip_interface: "eth0"


    - name: Create directories for kubeadm
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /etc/kubeadm
        - /etc/kubernetes/pki

    - name: Create first-boot initialization script
      ansible.builtin.copy:
        content: |
          #!/bin/bash

          # Wait for network to be ready
          sleep 30

          # Apply network configuration
          netplan apply

          # Start and enable services
          # Services will be enabled by enable-services-chroot.yml
          # systemctl doesn't work in chroot environment

          echo "Shanghai-1 node ready for manual cluster join"
          echo "Use: kubeadm join <cluster-endpoint> --token <token> --discovery-token-ca-cert-hash <hash> --control-plane"
        dest: /usr/local/bin/init-shanghai-1.sh
        mode: '0755'

    - name: Create systemd service for first-boot initialization
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Shanghai-1 node initialization
          After=network-online.target
          Wants=network-online.target
          ConditionPathExists=!/var/lib/shanghai-1-initialized

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/init-shanghai-1.sh
          ExecStartPost=/bin/touch /var/lib/shanghai-1-initialized
          RemainAfterExit=true

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/init-shanghai-1.service
        mode: '0644'

    - name: Create systemd multi-user.target.wants directory
      ansible.builtin.file:
        path: /etc/systemd/system/multi-user.target.wants
        state: directory
        mode: '0755'

    - name: Enable shanghai-1 initialization service via symlink
      ansible.builtin.file:
        src: /etc/systemd/system/init-shanghai-1.service
        dest: /etc/systemd/system/multi-user.target.wants/init-shanghai-1.service
        state: link
