name: 'Build Orange Pi Image'
description: 'Build customized Orange Pi Zero 3 image for specific node'
inputs:
  node_name:
    description: 'Name of the node (e.g., shanghai-1)'
    required: true
  aws_role_arn:
    description: 'AWS IAM role ARN for S3 access'
    required: true
  s3_bucket:
    description: 'S3 bucket name for storing images'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set up QEMU for ARM64 emulation
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/arm64

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y wget xz-utils kpartx

    - name: Download Orange Pi Zero 3 server image
      shell: bash
      run: |
        # Download latest Orange Pi Zero 3 server image from Armbian
        ARMBIAN_VERSION="24.11.1"
        IMAGE_NAME="Armbian_${ARMBIAN_VERSION}_Orangepizero3_jammy_current_6.6.63_server.img.xz"
        DOWNLOAD_URL="https://dl.armbian.com/orangepizero3/Jammy_current_server/${IMAGE_NAME}"
        
        echo "Downloading Orange Pi Zero 3 server image..."
        wget -O "${IMAGE_NAME}" "${DOWNLOAD_URL}"
        
        # Verify download
        if [ ! -f "${IMAGE_NAME}" ]; then
          echo "Error: Failed to download image"
          exit 1
        fi
        
        echo "Downloaded: ${IMAGE_NAME}"

    - name: Extract and customize image for node
      shell: bash
      run: |
        # Find the downloaded image
        IMAGE_FILE=$(find . -name "Armbian_*_Orangepizero3_*.img.xz" | head -n1)
        if [ -z "$IMAGE_FILE" ]; then
          echo "Error: No image file found"
          exit 1
        fi
        
        echo "Using image: $IMAGE_FILE"
        
        # Extract image
        xz -d "$IMAGE_FILE"
        IMG_FILE="${IMAGE_FILE%.xz}"
        
        # Create loop device
        LOOP_DEVICE=$(sudo losetup -f --show "$IMG_FILE")
        echo "Loop device: $LOOP_DEVICE"
        
        # Wait for partitions to be available
        sleep 2
        sudo partprobe "$LOOP_DEVICE"
        
        # Mount root partition
        sudo mkdir -p /mnt/orangepi
        sudo mount "${LOOP_DEVICE}p1" /mnt/orangepi
        
        # Apply common control-plane configuration first
        cd ansible
        sudo ansible-playbook \
          -i localhost, \
          -c local \
          -e ansible_host=localhost \
          -e target_mount=/mnt/orangepi \
          playbooks/control-plane.yml
        
        # Apply node-specific configuration
        sudo ansible-playbook \
          -i localhost, \
          -c local \
          -e ansible_host=localhost \
          -e target_mount=/mnt/orangepi \
          playbooks/node-${{ inputs.node_name }}.yml
        
        # Cleanup
        sudo umount /mnt/orangepi
        sudo losetup -d "$LOOP_DEVICE"
        
        # Compress customized image
        xz -9 "$IMG_FILE"
        
        # Create final image name
        FINAL_IMAGE="orangepi-zero3-${{ inputs.node_name }}.img.xz"
        mv "${IMG_FILE}.xz" "$FINAL_IMAGE"
        
        # Generate checksum
        sha256sum "$FINAL_IMAGE" > "${FINAL_IMAGE}.sha256"
        
        # Create image info
        cat > image-info.json << EOF
        {
          "node_name": "${{ inputs.node_name }}",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "image_file": "$FINAL_IMAGE",
          "checksum_file": "${FINAL_IMAGE}.sha256",
          "armbian_version": "24.11.1",
          "github_sha": "$GITHUB_SHA"
        }
        EOF

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws_role_arn }}
        aws-region: ap-northeast-1

    - name: Upload to S3
      shell: bash
      run: |
        # Upload image file
        aws s3 cp "orangepi-zero3-${{ inputs.node_name }}.img.xz" \
          "s3://${{ inputs.s3_bucket }}/images/orange-pi-zero3/${{ inputs.node_name }}/"
        
        # Upload checksum
        aws s3 cp "orangepi-zero3-${{ inputs.node_name }}.img.xz.sha256" \
          "s3://${{ inputs.s3_bucket }}/images/orange-pi-zero3/${{ inputs.node_name }}/"
        
        # Upload image info
        aws s3 cp image-info.json \
          "s3://${{ inputs.s3_bucket }}/images/orange-pi-zero3/${{ inputs.node_name }}/"
        
        # Create latest symlink
        aws s3 cp "orangepi-zero3-${{ inputs.node_name }}.img.xz" \
          "s3://${{ inputs.s3_bucket }}/images/orange-pi-zero3/${{ inputs.node_name }}/latest.img.xz"
        
        # Set metadata
        aws s3api put-object-tagging \
          --bucket "${{ inputs.s3_bucket }}" \
          --key "images/orange-pi-zero3/${{ inputs.node_name }}/orangepi-zero3-${{ inputs.node_name }}.img.xz" \
          --tagging "TagSet=[{Key=NodeName,Value=${{ inputs.node_name }}},{Key=BuildDate,Value=$(date +%Y-%m-%d)},{Key=GitSHA,Value=$GITHUB_SHA}]"